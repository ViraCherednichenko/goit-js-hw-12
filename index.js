import{a as A,S as R,i as n}from"./assets/vendor-Bt_EzQve.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function r(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(e){if(e.ep)return;e.ep=!0;const i=r(e);fetch(e.href,i)}})();const P="52890208-7e9e33748fa955c38ee9e6aa5",S=15,$=A.create({baseURL:"https://pixabay.com/api/",timeout:1e4,params:{key:P,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:S}});async function m(t,o=1){if(!t||typeof t!="string")return Promise.reject(new Error("Query must be a non-empty string"));try{return(await $.get("/",{params:{q:t.trim(),page:o}})).data}catch(r){throw r}}const g=document.querySelector(".gallery"),d=document.querySelector(".load-more"),a=document.querySelector(".loader"),q=new R(".gallery a",{captionsData:"alt",captionDelay:250});function h(t=[]){if(!Array.isArray(t)||t.length===0)return;const o=t.map(r=>{const{webformatURL:s,largeImageURL:e,tags:i,likes:c,views:w,comments:E,downloads:v}=r;return`
      <li class="gallery-item">
        <a class="gallery-link" href="${e}">
          <img class="gallery-image" src="${s}" alt="${i}" loading="lazy" />
        </a>
        <div class="gallery-info">
          <p class="info-item"><b>Likes</b><br>${c}</p>
          <p class="info-item"><b>Views</b><br>${w}</p>
          <p class="info-item"><b>Comments</b><br>${E}</p>
          <p class="info-item"><b>Downloads</b><br>${v}</p>
        </div>
      </li>`}).join("");g.insertAdjacentHTML("beforeend",o),q.refresh()}function B(){g.innerHTML=""}function y(){a&&(a.classList.remove("hidden"),a.setAttribute("aria-hidden","false"))}function p(){a&&(a.classList.add("hidden"),a.setAttribute("aria-hidden","true"))}function b(){d&&d.classList.remove("hidden")}function f(){d&&d.classList.add("hidden")}const M=document.querySelector("#search-form")||document.querySelector(".form"),H=document.querySelector(".load-more"),N=document.querySelector(".gallery");let u="",l=1;const L=15;M.addEventListener("submit",O);H.addEventListener("click",_);async function O(t){t.preventDefault();const o=t.target.elements.query.value.trim();if(!o){n.warning({title:"Warning",message:"Please enter a search query!",position:"topRight"});return}u=o,l=1,B(),f(),y();try{const r=await m(u,l),s=Array.isArray(r.hits)?r.hits:[];if(s.length===0){n.info({title:"No results",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}h(s),r.totalHits>l*L?b():(f(),n.info({title:"End",message:"We're sorry, but you've reached the end of search results.",position:"topRight"})),n.success({title:"Found",message:`Found ${r.totalHits} images for "${u}"`,position:"topRight"})}catch{n.error({title:"Error",message:"Something went wrong while fetching images.",position:"topRight"})}finally{p()}}async function _(){l+=1,y(),f();try{const t=await m(u,l),o=Array.isArray(t.hits)?t.hits:[];if(o.length===0){n.info({title:"No more",message:"No additional images found.",position:"topRight"});return}h(o);const r=N.firstElementChild;if(r){const{height:s}=r.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})}l*L>=t.totalHits?(f(),n.info({title:"End",message:"We're sorry, but you've reached the end of search results.",position:"topRight"})):b()}catch{n.error({title:"Error",message:"Error loading more images!",position:"topRight"})}finally{p()}}
//# sourceMappingURL=index.js.map
